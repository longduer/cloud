server:
  port: 8101

spring:
  application:
    name: leung-auth
  redis:
    database: 0
    host: 127.0.0.1
    port: 6379
    jedis:
      pool:
        min-idle: 8
        max-idle: 500
        max-active: 2000
        max-wait: 10000
    timeout: 5000
  datasource:
    dynamic:
      # 数据库连接池使用的是Hikari，Spring Boot2.0后官方推荐使用该连接池，特点是响应速度快
      hikari:
        connection-timeout: 30000
        max-lifetime: 1800000
        max-pool-size: 15
        min-idle: 5
        connection-test-query: select 1
        pool-name: FebsHikariCP
      primary: base
      datasource:
        # 配置了一个名称为base的数据源，如果要继续添加数据源的话只需要在spring.datasource.dynamic.datasource下继续添加即可
        base:
          username: root
          password: 186588
          driver-class-name: com.mysql.cj.jdbc.Driver
          url: jdbc:mysql://localhost:3306/leung_cloud_base?useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT%2b8
mybatis-plus:
  # 指定别名扫描路径，这个路径后续在febs-common模块里定义，该路径下的实体类将自动配置别名，默认为类名首字母小写。配置别名后，便可以直接在MyBatis XML文件里使用了
  type-aliases-package: yves.leung.common.entity.system
  # 指定MyBatis XML文件路径
  mapper-locations: classpath:mapper/*.xml
  configuration:
    # 指定为null，否则再插入空值时会报“无效的列类型”错误
    jdbc-type-for-null: null
  global-config:
    # 设置为false关闭MyBatis Plus Banner打印
    banner: false

eureka:
  instance:
    # 向Eureka 服务端发送心跳的间隔时间，单位为秒，用于服务续约。这里配置为20秒，即每隔20秒向febs-register发送心跳，表明当前服务没有宕机；
    lease-renewal-interval-in-seconds: 20
  client:
    # 为true时表示将当前服务注册到Eureak服务端
    register-with-eureka: true
    # 为true时表示从Eureka 服务端获取注册的服务信息
    fetch-registry: true
    # 新实例信息的变化到Eureka服务端的间隔时间，单位为秒
    instance-info-replication-interval-seconds: 30
    # 默认值为30秒，即每30秒去Eureka服务端上获取服务并缓存，这里指定为3秒的原因是方便开发时测试，实际可以指定为默认值即可
    registry-fetch-interval-seconds: 3
    serviceUrl:
      # 指定Eureka服务端地址
      defaultZone: http://yves:186588@localhost:8001/register/eureka/
